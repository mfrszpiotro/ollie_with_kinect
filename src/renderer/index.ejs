<html>

<head>
  <meta charset="utf-8" />
  <meta http-equiv="Content-Security-Policy" content="script-src 'self' 'unsafe-inline'" />
  <title>Hello Electron React!</title>
</head>

<body>
  <div id="root"></div>
  <script>
    // this delay is required to wait till React root is loaded entirely.
    function callback(a) {
      return function () {
        alert('Hello ' + a);
        const Kinect2 = require('kinect2');
        const kinect = new Kinect2();

        const $outputCanvas = document.getElementById('outputCanvas'),
          outputCtx = $outputCanvas.getContext('2d'),
          outputImageData = outputCtx.createImageData(
            $outputCanvas.width,
            $outputCanvas.height,
          );

        const $toggleFeedButton = document.getElementById('toggleFeedButton');

        let feedOpen = false;

        const init = () => {
          startKinect();
        };

        const setFeedOpen = async (value) => {
          if (value !== feedOpen) {
            feedOpen = value;
            if (feedOpen) {
              kinect.openColorReader();
              $toggleFeedButton.textContent = 'Stop Video';
            } else {
              await kinect.closeColorReader();
              $toggleFeedButton.textContent = 'Start Video';
            }
          }
        };

        const startKinect = () => {
          if (kinect.open()) {
            kinect.on('colorFrame', (newPixelData) => {
              renderColorFrame(outputCtx, outputImageData, newPixelData);
            });

            $toggleFeedButton.addEventListener('click', function () {
              setFeedOpen(!feedOpen);
            });

            $toggleFeedButton.removeAttribute('disabled');

            setFeedOpen(true);
          }
        };

        const renderColorFrame = (ctx, canvasImageData, newPixelData) => {
          const pixelArray = canvasImageData.data;
          for (let i = 0; i < canvasImageData.data.length; i++) {
            pixelArray[i] = newPixelData[i];
          }
          ctx.putImageData(canvasImageData, 0, 0);
        };

        // expose the kinect instance to the window object in this demo app to allow the parent window to close it between sessions
        window.kinect = kinect;
        init();
      };
    }
    var a = 'world';
    setTimeout(callback(a), 2000);
    a = 'Stack Overflow';
  </script>
</body>

</html>